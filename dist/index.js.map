{
  "version": 3,
  "sources": ["../node_modules/@hono/node-server/dist/index.mjs", "../node_modules/hono/dist/compose.js", "../node_modules/hono/dist/utils/body.js", "../node_modules/hono/dist/utils/url.js", "../node_modules/hono/dist/request.js", "../node_modules/hono/dist/utils/html.js", "../node_modules/hono/dist/context.js", "../node_modules/hono/dist/router.js", "../node_modules/hono/dist/utils/constants.js", "../node_modules/hono/dist/hono-base.js", "../node_modules/hono/dist/router/reg-exp-router/node.js", "../node_modules/hono/dist/router/reg-exp-router/trie.js", "../node_modules/hono/dist/router/reg-exp-router/router.js", "../node_modules/hono/dist/router/smart-router/router.js", "../node_modules/hono/dist/router/trie-router/node.js", "../node_modules/hono/dist/router/trie-router/router.js", "../node_modules/hono/dist/hono.js", "../src/index.ts"],
  "sourcesContent": ["// src/server.ts\nimport { createServer as createServerHTTP } from \"http\";\n\n// src/request.ts\nimport { Http2ServerRequest } from \"http2\";\nimport { Readable } from \"stream\";\nvar RequestError = class extends Error {\n  static name = \"RequestError\";\n  constructor(message, options) {\n    super(message, options);\n  }\n};\nvar toRequestError = (e) => {\n  if (e instanceof RequestError) {\n    return e;\n  }\n  return new RequestError(e.message, { cause: e });\n};\nvar GlobalRequest = global.Request;\nvar Request = class extends GlobalRequest {\n  constructor(input, options) {\n    if (typeof input === \"object\" && getRequestCache in input) {\n      input = input[getRequestCache]();\n    }\n    if (typeof options?.body?.getReader !== \"undefined\") {\n      ;\n      options.duplex ??= \"half\";\n    }\n    super(input, options);\n  }\n};\nvar newRequestFromIncoming = (method, url, incoming, abortController) => {\n  const headerRecord = [];\n  const rawHeaders = incoming.rawHeaders;\n  for (let i = 0; i < rawHeaders.length; i += 2) {\n    const { [i]: key, [i + 1]: value } = rawHeaders;\n    if (key.charCodeAt(0) !== /*:*/\n    58) {\n      headerRecord.push([key, value]);\n    }\n  }\n  const init = {\n    method,\n    headers: headerRecord,\n    signal: abortController.signal\n  };\n  if (method === \"TRACE\") {\n    init.method = \"GET\";\n    const req = new Request(url, init);\n    Object.defineProperty(req, \"method\", {\n      get() {\n        return \"TRACE\";\n      }\n    });\n    return req;\n  }\n  if (!(method === \"GET\" || method === \"HEAD\")) {\n    if (\"rawBody\" in incoming && incoming.rawBody instanceof Buffer) {\n      init.body = new ReadableStream({\n        start(controller) {\n          controller.enqueue(incoming.rawBody);\n          controller.close();\n        }\n      });\n    } else {\n      init.body = Readable.toWeb(incoming);\n    }\n  }\n  return new Request(url, init);\n};\nvar getRequestCache = Symbol(\"getRequestCache\");\nvar requestCache = Symbol(\"requestCache\");\nvar incomingKey = Symbol(\"incomingKey\");\nvar urlKey = Symbol(\"urlKey\");\nvar abortControllerKey = Symbol(\"abortControllerKey\");\nvar getAbortController = Symbol(\"getAbortController\");\nvar requestPrototype = {\n  get method() {\n    return this[incomingKey].method || \"GET\";\n  },\n  get url() {\n    return this[urlKey];\n  },\n  [getAbortController]() {\n    this[getRequestCache]();\n    return this[abortControllerKey];\n  },\n  [getRequestCache]() {\n    this[abortControllerKey] ||= new AbortController();\n    return this[requestCache] ||= newRequestFromIncoming(\n      this.method,\n      this[urlKey],\n      this[incomingKey],\n      this[abortControllerKey]\n    );\n  }\n};\n[\n  \"body\",\n  \"bodyUsed\",\n  \"cache\",\n  \"credentials\",\n  \"destination\",\n  \"headers\",\n  \"integrity\",\n  \"mode\",\n  \"redirect\",\n  \"referrer\",\n  \"referrerPolicy\",\n  \"signal\",\n  \"keepalive\"\n].forEach((k) => {\n  Object.defineProperty(requestPrototype, k, {\n    get() {\n      return this[getRequestCache]()[k];\n    }\n  });\n});\n[\"arrayBuffer\", \"blob\", \"clone\", \"formData\", \"json\", \"text\"].forEach((k) => {\n  Object.defineProperty(requestPrototype, k, {\n    value: function() {\n      return this[getRequestCache]()[k]();\n    }\n  });\n});\nObject.setPrototypeOf(requestPrototype, Request.prototype);\nvar newRequest = (incoming, defaultHostname) => {\n  const req = Object.create(requestPrototype);\n  req[incomingKey] = incoming;\n  const incomingUrl = incoming.url || \"\";\n  if (incomingUrl[0] !== \"/\" && // short-circuit for performance. most requests are relative URL.\n  (incomingUrl.startsWith(\"http://\") || incomingUrl.startsWith(\"https://\"))) {\n    if (incoming instanceof Http2ServerRequest) {\n      throw new RequestError(\"Absolute URL for :path is not allowed in HTTP/2\");\n    }\n    try {\n      const url2 = new URL(incomingUrl);\n      req[urlKey] = url2.href;\n    } catch (e) {\n      throw new RequestError(\"Invalid absolute URL\", { cause: e });\n    }\n    return req;\n  }\n  const host = (incoming instanceof Http2ServerRequest ? incoming.authority : incoming.headers.host) || defaultHostname;\n  if (!host) {\n    throw new RequestError(\"Missing host header\");\n  }\n  let scheme;\n  if (incoming instanceof Http2ServerRequest) {\n    scheme = incoming.scheme;\n    if (!(scheme === \"http\" || scheme === \"https\")) {\n      throw new RequestError(\"Unsupported scheme\");\n    }\n  } else {\n    scheme = incoming.socket && incoming.socket.encrypted ? \"https\" : \"http\";\n  }\n  const url = new URL(`${scheme}://${host}${incomingUrl}`);\n  if (url.hostname.length !== host.length && url.hostname !== host.replace(/:\\d+$/, \"\")) {\n    throw new RequestError(\"Invalid host header\");\n  }\n  req[urlKey] = url.href;\n  return req;\n};\n\n// src/utils.ts\nfunction writeFromReadableStream(stream, writable) {\n  if (stream.locked) {\n    throw new TypeError(\"ReadableStream is locked.\");\n  } else if (writable.destroyed) {\n    stream.cancel();\n    return;\n  }\n  const reader = stream.getReader();\n  writable.on(\"close\", cancel);\n  writable.on(\"error\", cancel);\n  reader.read().then(flow, cancel);\n  return reader.closed.finally(() => {\n    writable.off(\"close\", cancel);\n    writable.off(\"error\", cancel);\n  });\n  function cancel(error) {\n    reader.cancel(error).catch(() => {\n    });\n    if (error) {\n      writable.destroy(error);\n    }\n  }\n  function onDrain() {\n    reader.read().then(flow, cancel);\n  }\n  function flow({ done, value }) {\n    try {\n      if (done) {\n        writable.end();\n      } else if (!writable.write(value)) {\n        writable.once(\"drain\", onDrain);\n      } else {\n        return reader.read().then(flow, cancel);\n      }\n    } catch (e) {\n      cancel(e);\n    }\n  }\n}\nvar buildOutgoingHttpHeaders = (headers) => {\n  const res = {};\n  if (!(headers instanceof Headers)) {\n    headers = new Headers(headers ?? void 0);\n  }\n  const cookies = [];\n  for (const [k, v] of headers) {\n    if (k === \"set-cookie\") {\n      cookies.push(v);\n    } else {\n      res[k] = v;\n    }\n  }\n  if (cookies.length > 0) {\n    res[\"set-cookie\"] = cookies;\n  }\n  res[\"content-type\"] ??= \"text/plain; charset=UTF-8\";\n  return res;\n};\n\n// src/response.ts\nvar responseCache = Symbol(\"responseCache\");\nvar getResponseCache = Symbol(\"getResponseCache\");\nvar cacheKey = Symbol(\"cache\");\nvar GlobalResponse = global.Response;\nvar Response2 = class _Response {\n  #body;\n  #init;\n  [getResponseCache]() {\n    delete this[cacheKey];\n    return this[responseCache] ||= new GlobalResponse(this.#body, this.#init);\n  }\n  constructor(body, init) {\n    this.#body = body;\n    if (init instanceof _Response) {\n      const cachedGlobalResponse = init[responseCache];\n      if (cachedGlobalResponse) {\n        this.#init = cachedGlobalResponse;\n        this[getResponseCache]();\n        return;\n      } else {\n        this.#init = init.#init;\n      }\n    } else {\n      this.#init = init;\n    }\n    if (typeof body === \"string\" || typeof body?.getReader !== \"undefined\") {\n      let headers = init?.headers || { \"content-type\": \"text/plain; charset=UTF-8\" };\n      if (headers instanceof Headers) {\n        headers = buildOutgoingHttpHeaders(headers);\n      }\n      ;\n      this[cacheKey] = [init?.status || 200, body, headers];\n    }\n  }\n};\n[\n  \"body\",\n  \"bodyUsed\",\n  \"headers\",\n  \"ok\",\n  \"redirected\",\n  \"status\",\n  \"statusText\",\n  \"trailers\",\n  \"type\",\n  \"url\"\n].forEach((k) => {\n  Object.defineProperty(Response2.prototype, k, {\n    get() {\n      return this[getResponseCache]()[k];\n    }\n  });\n});\n[\"arrayBuffer\", \"blob\", \"clone\", \"formData\", \"json\", \"text\"].forEach((k) => {\n  Object.defineProperty(Response2.prototype, k, {\n    value: function() {\n      return this[getResponseCache]()[k]();\n    }\n  });\n});\nObject.setPrototypeOf(Response2, GlobalResponse);\nObject.setPrototypeOf(Response2.prototype, GlobalResponse.prototype);\nvar stateKey = Reflect.ownKeys(new GlobalResponse()).find(\n  (k) => typeof k === \"symbol\" && k.toString() === \"Symbol(state)\"\n);\nif (!stateKey) {\n  console.warn(\"Failed to find Response internal state key\");\n}\nfunction getInternalBody(response) {\n  if (!stateKey) {\n    return;\n  }\n  if (response instanceof Response2) {\n    response = response[getResponseCache]();\n  }\n  const state = response[stateKey];\n  return state && state.body || void 0;\n}\n\n// src/utils/response/constants.ts\nvar X_ALREADY_SENT = \"x-hono-already-sent\";\n\n// src/globals.ts\nimport crypto from \"crypto\";\nvar webFetch = global.fetch;\nif (typeof global.crypto === \"undefined\") {\n  global.crypto = crypto;\n}\nglobal.fetch = (info, init) => {\n  init = {\n    // Disable compression handling so people can return the result of a fetch\n    // directly in the loader without messing with the Content-Encoding header.\n    compress: false,\n    ...init\n  };\n  return webFetch(info, init);\n};\n\n// src/listener.ts\nvar regBuffer = /^no$/i;\nvar regContentType = /^(application\\/json\\b|text\\/(?!event-stream\\b))/i;\nvar handleRequestError = () => new Response(null, {\n  status: 400\n});\nvar handleFetchError = (e) => new Response(null, {\n  status: e instanceof Error && (e.name === \"TimeoutError\" || e.constructor.name === \"TimeoutError\") ? 504 : 500\n});\nvar handleResponseError = (e, outgoing) => {\n  const err = e instanceof Error ? e : new Error(\"unknown error\", { cause: e });\n  if (err.code === \"ERR_STREAM_PREMATURE_CLOSE\") {\n    console.info(\"The user aborted a request.\");\n  } else {\n    console.error(e);\n    if (!outgoing.headersSent) {\n      outgoing.writeHead(500, { \"Content-Type\": \"text/plain\" });\n    }\n    outgoing.end(`Error: ${err.message}`);\n    outgoing.destroy(err);\n  }\n};\nvar responseViaCache = (res, outgoing) => {\n  const [status, body, header] = res[cacheKey];\n  if (typeof body === \"string\") {\n    header[\"Content-Length\"] = Buffer.byteLength(body);\n    outgoing.writeHead(status, header);\n    outgoing.end(body);\n  } else {\n    outgoing.writeHead(status, header);\n    return writeFromReadableStream(body, outgoing)?.catch(\n      (e) => handleResponseError(e, outgoing)\n    );\n  }\n};\nvar responseViaResponseObject = async (res, outgoing, options = {}) => {\n  if (res instanceof Promise) {\n    if (options.errorHandler) {\n      try {\n        res = await res;\n      } catch (err) {\n        const errRes = await options.errorHandler(err);\n        if (!errRes) {\n          return;\n        }\n        res = errRes;\n      }\n    } else {\n      res = await res.catch(handleFetchError);\n    }\n  }\n  if (cacheKey in res) {\n    return responseViaCache(res, outgoing);\n  }\n  const resHeaderRecord = buildOutgoingHttpHeaders(res.headers);\n  const internalBody = getInternalBody(res);\n  if (internalBody) {\n    const { length, source, stream } = internalBody;\n    if (source instanceof Uint8Array && source.byteLength !== length) {\n    } else {\n      if (length) {\n        resHeaderRecord[\"content-length\"] = length;\n      }\n      outgoing.writeHead(res.status, resHeaderRecord);\n      if (typeof source === \"string\" || source instanceof Uint8Array) {\n        outgoing.end(source);\n      } else if (source instanceof Blob) {\n        outgoing.end(new Uint8Array(await source.arrayBuffer()));\n      } else {\n        await writeFromReadableStream(stream, outgoing);\n      }\n      return;\n    }\n  }\n  if (res.body) {\n    const {\n      \"transfer-encoding\": transferEncoding,\n      \"content-encoding\": contentEncoding,\n      \"content-length\": contentLength,\n      \"x-accel-buffering\": accelBuffering,\n      \"content-type\": contentType\n    } = resHeaderRecord;\n    if (transferEncoding || contentEncoding || contentLength || // nginx buffering variant\n    accelBuffering && regBuffer.test(accelBuffering) || !regContentType.test(contentType)) {\n      outgoing.writeHead(res.status, resHeaderRecord);\n      await writeFromReadableStream(res.body, outgoing);\n    } else {\n      const buffer = await res.arrayBuffer();\n      resHeaderRecord[\"content-length\"] = buffer.byteLength;\n      outgoing.writeHead(res.status, resHeaderRecord);\n      outgoing.end(new Uint8Array(buffer));\n    }\n  } else if (resHeaderRecord[X_ALREADY_SENT]) {\n  } else {\n    outgoing.writeHead(res.status, resHeaderRecord);\n    outgoing.end();\n  }\n};\nvar getRequestListener = (fetchCallback, options = {}) => {\n  if (options.overrideGlobalObjects !== false && global.Request !== Request) {\n    Object.defineProperty(global, \"Request\", {\n      value: Request\n    });\n    Object.defineProperty(global, \"Response\", {\n      value: Response2\n    });\n  }\n  return async (incoming, outgoing) => {\n    let res, req;\n    try {\n      req = newRequest(incoming, options.hostname);\n      outgoing.on(\"close\", () => {\n        const abortController = req[abortControllerKey];\n        if (!abortController) {\n          return;\n        }\n        if (incoming.errored) {\n          req[abortControllerKey].abort(incoming.errored.toString());\n        } else if (!outgoing.writableFinished) {\n          req[abortControllerKey].abort(\"Client connection prematurely closed.\");\n        }\n      });\n      res = fetchCallback(req, { incoming, outgoing });\n      if (cacheKey in res) {\n        return responseViaCache(res, outgoing);\n      }\n    } catch (e) {\n      if (!res) {\n        if (options.errorHandler) {\n          res = await options.errorHandler(req ? e : toRequestError(e));\n          if (!res) {\n            return;\n          }\n        } else if (!req) {\n          res = handleRequestError();\n        } else {\n          res = handleFetchError(e);\n        }\n      } else {\n        return handleResponseError(e, outgoing);\n      }\n    }\n    try {\n      return await responseViaResponseObject(res, outgoing, options);\n    } catch (e) {\n      return handleResponseError(e, outgoing);\n    }\n  };\n};\n\n// src/server.ts\nvar createAdaptorServer = (options) => {\n  const fetchCallback = options.fetch;\n  const requestListener = getRequestListener(fetchCallback, {\n    hostname: options.hostname,\n    overrideGlobalObjects: options.overrideGlobalObjects\n  });\n  const createServer = options.createServer || createServerHTTP;\n  const server = createServer(options.serverOptions || {}, requestListener);\n  return server;\n};\nvar serve = (options, listeningListener) => {\n  const server = createAdaptorServer(options);\n  server.listen(options?.port ?? 3e3, options.hostname, () => {\n    const serverInfo = server.address();\n    listeningListener && listeningListener(serverInfo);\n  });\n  return server;\n};\nexport {\n  RequestError,\n  createAdaptorServer,\n  getRequestListener,\n  serve\n};\n", "// src/compose.ts\nvar compose = (middleware, onError, onNotFound) => {\n  return (context, next) => {\n    let index = -1;\n    return dispatch(0);\n    async function dispatch(i) {\n      if (i <= index) {\n        throw new Error(\"next() called multiple times\");\n      }\n      index = i;\n      let res;\n      let isError = false;\n      let handler;\n      if (middleware[i]) {\n        handler = middleware[i][0][0];\n        context.req.routeIndex = i;\n      } else {\n        handler = i === middleware.length && next || void 0;\n      }\n      if (handler) {\n        try {\n          res = await handler(context, () => dispatch(i + 1));\n        } catch (err) {\n          if (err instanceof Error && onError) {\n            context.error = err;\n            res = await onError(err, context);\n            isError = true;\n          } else {\n            throw err;\n          }\n        }\n      } else {\n        if (context.finalized === false && onNotFound) {\n          res = await onNotFound(context);\n        }\n      }\n      if (res && (context.finalized === false || isError)) {\n        context.res = res;\n      }\n      return context;\n    }\n  };\n};\nexport {\n  compose\n};\n", "// src/utils/body.ts\nimport { HonoRequest } from \"../request.js\";\nvar parseBody = async (request, options = /* @__PURE__ */ Object.create(null)) => {\n  const { all = false, dot = false } = options;\n  const headers = request instanceof HonoRequest ? request.raw.headers : request.headers;\n  const contentType = headers.get(\"Content-Type\");\n  if (contentType?.startsWith(\"multipart/form-data\") || contentType?.startsWith(\"application/x-www-form-urlencoded\")) {\n    return parseFormData(request, { all, dot });\n  }\n  return {};\n};\nasync function parseFormData(request, options) {\n  const formData = await request.formData();\n  if (formData) {\n    return convertFormDataToBodyData(formData, options);\n  }\n  return {};\n}\nfunction convertFormDataToBodyData(formData, options) {\n  const form = /* @__PURE__ */ Object.create(null);\n  formData.forEach((value, key) => {\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\n    if (!shouldParseAllValues) {\n      form[key] = value;\n    } else {\n      handleParsingAllValues(form, key, value);\n    }\n  });\n  if (options.dot) {\n    Object.entries(form).forEach(([key, value]) => {\n      const shouldParseDotValues = key.includes(\".\");\n      if (shouldParseDotValues) {\n        handleParsingNestedValues(form, key, value);\n        delete form[key];\n      }\n    });\n  }\n  return form;\n}\nvar handleParsingAllValues = (form, key, value) => {\n  if (form[key] !== void 0) {\n    if (Array.isArray(form[key])) {\n      ;\n      form[key].push(value);\n    } else {\n      form[key] = [form[key], value];\n    }\n  } else {\n    form[key] = value;\n  }\n};\nvar handleParsingNestedValues = (form, key, value) => {\n  let nestedForm = form;\n  const keys = key.split(\".\");\n  keys.forEach((key2, index) => {\n    if (index === keys.length - 1) {\n      nestedForm[key2] = value;\n    } else {\n      if (!nestedForm[key2] || typeof nestedForm[key2] !== \"object\" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {\n        nestedForm[key2] = /* @__PURE__ */ Object.create(null);\n      }\n      nestedForm = nestedForm[key2];\n    }\n  });\n};\nexport {\n  parseBody\n};\n", "// src/utils/url.ts\nvar splitPath = (path) => {\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  return paths;\n};\nvar splitRoutingPath = (routePath) => {\n  const { groups, path } = extractGroupsFromPath(routePath);\n  const paths = splitPath(path);\n  return replaceGroupMarks(paths, groups);\n};\nvar extractGroupsFromPath = (path) => {\n  const groups = [];\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\n    const mark = `@${index}`;\n    groups.push([mark, match]);\n    return mark;\n  });\n  return { groups, path };\n};\nvar replaceGroupMarks = (paths, groups) => {\n  for (let i = groups.length - 1; i >= 0; i--) {\n    const [mark] = groups[i];\n    for (let j = paths.length - 1; j >= 0; j--) {\n      if (paths[j].includes(mark)) {\n        paths[j] = paths[j].replace(mark, groups[i][1]);\n        break;\n      }\n    }\n  }\n  return paths;\n};\nvar patternCache = {};\nvar getPattern = (label, next) => {\n  if (label === \"*\") {\n    return \"*\";\n  }\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n  if (match) {\n    const cacheKey = `${label}#${next}`;\n    if (!patternCache[cacheKey]) {\n      if (match[2]) {\n        patternCache[cacheKey] = next && next[0] !== \":\" && next[0] !== \"*\" ? [cacheKey, match[1], new RegExp(`^${match[2]}(?=/${next})`)] : [label, match[1], new RegExp(`^${match[2]}$`)];\n      } else {\n        patternCache[cacheKey] = [label, match[1], true];\n      }\n    }\n    return patternCache[cacheKey];\n  }\n  return null;\n};\nvar tryDecode = (str, decoder) => {\n  try {\n    return decoder(str);\n  } catch {\n    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {\n      try {\n        return decoder(match);\n      } catch {\n        return match;\n      }\n    });\n  }\n};\nvar tryDecodeURI = (str) => tryDecode(str, decodeURI);\nvar getPath = (request) => {\n  const url = request.url;\n  const start = url.indexOf(\"/\", 8);\n  let i = start;\n  for (; i < url.length; i++) {\n    const charCode = url.charCodeAt(i);\n    if (charCode === 37) {\n      const queryIndex = url.indexOf(\"?\", i);\n      const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);\n      return tryDecodeURI(path.includes(\"%25\") ? path.replace(/%25/g, \"%2525\") : path);\n    } else if (charCode === 63) {\n      break;\n    }\n  }\n  return url.slice(start, i);\n};\nvar getQueryStrings = (url) => {\n  const queryIndex = url.indexOf(\"?\", 8);\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\n};\nvar getPathNoStrict = (request) => {\n  const result = getPath(request);\n  return result.length > 1 && result.at(-1) === \"/\" ? result.slice(0, -1) : result;\n};\nvar mergePath = (base, sub, ...rest) => {\n  if (rest.length) {\n    sub = mergePath(sub, ...rest);\n  }\n  return `${base?.[0] === \"/\" ? \"\" : \"/\"}${base}${sub === \"/\" ? \"\" : `${base?.at(-1) === \"/\" ? \"\" : \"/\"}${sub?.[0] === \"/\" ? sub.slice(1) : sub}`}`;\n};\nvar checkOptionalParameter = (path) => {\n  if (path.charCodeAt(path.length - 1) !== 63 || !path.includes(\":\")) {\n    return null;\n  }\n  const segments = path.split(\"/\");\n  const results = [];\n  let basePath = \"\";\n  segments.forEach((segment) => {\n    if (segment !== \"\" && !/\\:/.test(segment)) {\n      basePath += \"/\" + segment;\n    } else if (/\\:/.test(segment)) {\n      if (/\\?/.test(segment)) {\n        if (results.length === 0 && basePath === \"\") {\n          results.push(\"/\");\n        } else {\n          results.push(basePath);\n        }\n        const optionalSegment = segment.replace(\"?\", \"\");\n        basePath += \"/\" + optionalSegment;\n        results.push(basePath);\n      } else {\n        basePath += \"/\" + segment;\n      }\n    }\n  });\n  return results.filter((v, i, a) => a.indexOf(v) === i);\n};\nvar _decodeURI = (value) => {\n  if (!/[%+]/.test(value)) {\n    return value;\n  }\n  if (value.indexOf(\"+\") !== -1) {\n    value = value.replace(/\\+/g, \" \");\n  }\n  return value.indexOf(\"%\") !== -1 ? decodeURIComponent_(value) : value;\n};\nvar _getQueryParam = (url, key, multiple) => {\n  let encoded;\n  if (!multiple && key && !/[%+]/.test(key)) {\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\n    if (keyIndex2 === -1) {\n      keyIndex2 = url.indexOf(`&${key}`, 8);\n    }\n    while (keyIndex2 !== -1) {\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\n      if (trailingKeyCode === 61) {\n        const valueIndex = keyIndex2 + key.length + 2;\n        const endIndex = url.indexOf(\"&\", valueIndex);\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\n        return \"\";\n      }\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\n    }\n    encoded = /[%+]/.test(url);\n    if (!encoded) {\n      return void 0;\n    }\n  }\n  const results = {};\n  encoded ??= /[%+]/.test(url);\n  let keyIndex = url.indexOf(\"?\", 8);\n  while (keyIndex !== -1) {\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\n    let valueIndex = url.indexOf(\"=\", keyIndex);\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\n      valueIndex = -1;\n    }\n    let name = url.slice(\n      keyIndex + 1,\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\n    );\n    if (encoded) {\n      name = _decodeURI(name);\n    }\n    keyIndex = nextKeyIndex;\n    if (name === \"\") {\n      continue;\n    }\n    let value;\n    if (valueIndex === -1) {\n      value = \"\";\n    } else {\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\n      if (encoded) {\n        value = _decodeURI(value);\n      }\n    }\n    if (multiple) {\n      if (!(results[name] && Array.isArray(results[name]))) {\n        results[name] = [];\n      }\n      ;\n      results[name].push(value);\n    } else {\n      results[name] ??= value;\n    }\n  }\n  return key ? results[key] : results;\n};\nvar getQueryParam = _getQueryParam;\nvar getQueryParams = (url, key) => {\n  return _getQueryParam(url, key, true);\n};\nvar decodeURIComponent_ = decodeURIComponent;\nexport {\n  checkOptionalParameter,\n  decodeURIComponent_,\n  getPath,\n  getPathNoStrict,\n  getPattern,\n  getQueryParam,\n  getQueryParams,\n  getQueryStrings,\n  mergePath,\n  splitPath,\n  splitRoutingPath,\n  tryDecode\n};\n", "// src/request.ts\nimport { parseBody } from \"./utils/body.js\";\nimport { decodeURIComponent_, getQueryParam, getQueryParams, tryDecode } from \"./utils/url.js\";\nvar tryDecodeURIComponent = (str) => tryDecode(str, decodeURIComponent_);\nvar HonoRequest = class {\n  raw;\n  #validatedData;\n  #matchResult;\n  routeIndex = 0;\n  path;\n  bodyCache = {};\n  constructor(request, path = \"/\", matchResult = [[]]) {\n    this.raw = request;\n    this.path = path;\n    this.#matchResult = matchResult;\n    this.#validatedData = {};\n  }\n  param(key) {\n    return key ? this.#getDecodedParam(key) : this.#getAllDecodedParams();\n  }\n  #getDecodedParam(key) {\n    const paramKey = this.#matchResult[0][this.routeIndex][1][key];\n    const param = this.#getParamValue(paramKey);\n    return param ? /\\%/.test(param) ? tryDecodeURIComponent(param) : param : void 0;\n  }\n  #getAllDecodedParams() {\n    const decoded = {};\n    const keys = Object.keys(this.#matchResult[0][this.routeIndex][1]);\n    for (const key of keys) {\n      const value = this.#getParamValue(this.#matchResult[0][this.routeIndex][1][key]);\n      if (value && typeof value === \"string\") {\n        decoded[key] = /\\%/.test(value) ? tryDecodeURIComponent(value) : value;\n      }\n    }\n    return decoded;\n  }\n  #getParamValue(paramKey) {\n    return this.#matchResult[1] ? this.#matchResult[1][paramKey] : paramKey;\n  }\n  query(key) {\n    return getQueryParam(this.url, key);\n  }\n  queries(key) {\n    return getQueryParams(this.url, key);\n  }\n  header(name) {\n    if (name) {\n      return this.raw.headers.get(name) ?? void 0;\n    }\n    const headerData = {};\n    this.raw.headers.forEach((value, key) => {\n      headerData[key] = value;\n    });\n    return headerData;\n  }\n  async parseBody(options) {\n    return this.bodyCache.parsedBody ??= await parseBody(this, options);\n  }\n  #cachedBody = (key) => {\n    const { bodyCache, raw } = this;\n    const cachedBody = bodyCache[key];\n    if (cachedBody) {\n      return cachedBody;\n    }\n    const anyCachedKey = Object.keys(bodyCache)[0];\n    if (anyCachedKey) {\n      return bodyCache[anyCachedKey].then((body) => {\n        if (anyCachedKey === \"json\") {\n          body = JSON.stringify(body);\n        }\n        return new Response(body)[key]();\n      });\n    }\n    return bodyCache[key] = raw[key]();\n  };\n  json() {\n    return this.#cachedBody(\"json\");\n  }\n  text() {\n    return this.#cachedBody(\"text\");\n  }\n  arrayBuffer() {\n    return this.#cachedBody(\"arrayBuffer\");\n  }\n  blob() {\n    return this.#cachedBody(\"blob\");\n  }\n  formData() {\n    return this.#cachedBody(\"formData\");\n  }\n  addValidatedData(target, data) {\n    this.#validatedData[target] = data;\n  }\n  valid(target) {\n    return this.#validatedData[target];\n  }\n  get url() {\n    return this.raw.url;\n  }\n  get method() {\n    return this.raw.method;\n  }\n  get matchedRoutes() {\n    return this.#matchResult[0].map(([[, route]]) => route);\n  }\n  get routePath() {\n    return this.#matchResult[0].map(([[, route]]) => route)[this.routeIndex].path;\n  }\n};\nexport {\n  HonoRequest\n};\n", "// src/utils/html.ts\nvar HtmlEscapedCallbackPhase = {\n  Stringify: 1,\n  BeforeStream: 2,\n  Stream: 3\n};\nvar raw = (value, callbacks) => {\n  const escapedString = new String(value);\n  escapedString.isEscaped = true;\n  escapedString.callbacks = callbacks;\n  return escapedString;\n};\nvar escapeRe = /[&<>'\"]/;\nvar stringBufferToString = async (buffer, callbacks) => {\n  let str = \"\";\n  callbacks ||= [];\n  const resolvedBuffer = await Promise.all(buffer);\n  for (let i = resolvedBuffer.length - 1; ; i--) {\n    str += resolvedBuffer[i];\n    i--;\n    if (i < 0) {\n      break;\n    }\n    let r = resolvedBuffer[i];\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    const isEscaped = r.isEscaped;\n    r = await (typeof r === \"object\" ? r.toString() : r);\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    if (r.isEscaped ?? isEscaped) {\n      str += r;\n    } else {\n      const buf = [str];\n      escapeToBuffer(r, buf);\n      str = buf[0];\n    }\n  }\n  return raw(str, callbacks);\n};\nvar escapeToBuffer = (str, buffer) => {\n  const match = str.search(escapeRe);\n  if (match === -1) {\n    buffer[0] += str;\n    return;\n  }\n  let escape;\n  let index;\n  let lastIndex = 0;\n  for (index = match; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escape = \"&quot;\";\n        break;\n      case 39:\n        escape = \"&#39;\";\n        break;\n      case 38:\n        escape = \"&amp;\";\n        break;\n      case 60:\n        escape = \"&lt;\";\n        break;\n      case 62:\n        escape = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    buffer[0] += str.substring(lastIndex, index) + escape;\n    lastIndex = index + 1;\n  }\n  buffer[0] += str.substring(lastIndex, index);\n};\nvar resolveCallbackSync = (str) => {\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return str;\n  }\n  const buffer = [str];\n  const context = {};\n  callbacks.forEach((c) => c({ phase: HtmlEscapedCallbackPhase.Stringify, buffer, context }));\n  return buffer[0];\n};\nvar resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {\n  if (typeof str === \"object\" && !(str instanceof String)) {\n    if (!(str instanceof Promise)) {\n      str = str.toString();\n    }\n    if (str instanceof Promise) {\n      str = await str;\n    }\n  }\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return Promise.resolve(str);\n  }\n  if (buffer) {\n    buffer[0] += str;\n  } else {\n    buffer = [str];\n  }\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\n    (res) => Promise.all(\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\n    ).then(() => buffer[0])\n  );\n  if (preserveCallbacks) {\n    return raw(await resStr, callbacks);\n  } else {\n    return resStr;\n  }\n};\nexport {\n  HtmlEscapedCallbackPhase,\n  escapeToBuffer,\n  raw,\n  resolveCallback,\n  resolveCallbackSync,\n  stringBufferToString\n};\n", "// src/context.ts\nimport { HonoRequest } from \"./request.js\";\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"./utils/html.js\";\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\nvar setHeaders = (headers, map = {}) => {\n  for (const key of Object.keys(map)) {\n    headers.set(key, map[key]);\n  }\n  return headers;\n};\nvar Context = class {\n  #rawRequest;\n  #req;\n  env = {};\n  #var;\n  finalized = false;\n  error;\n  #status = 200;\n  #executionCtx;\n  #headers;\n  #preparedHeaders;\n  #res;\n  #isFresh = true;\n  #layout;\n  #renderer;\n  #notFoundHandler;\n  #matchResult;\n  #path;\n  constructor(req, options) {\n    this.#rawRequest = req;\n    if (options) {\n      this.#executionCtx = options.executionCtx;\n      this.env = options.env;\n      this.#notFoundHandler = options.notFoundHandler;\n      this.#path = options.path;\n      this.#matchResult = options.matchResult;\n    }\n  }\n  get req() {\n    this.#req ??= new HonoRequest(this.#rawRequest, this.#path, this.#matchResult);\n    return this.#req;\n  }\n  get event() {\n    if (this.#executionCtx && \"respondWith\" in this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no FetchEvent\");\n    }\n  }\n  get executionCtx() {\n    if (this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no ExecutionContext\");\n    }\n  }\n  get res() {\n    this.#isFresh = false;\n    return this.#res ||= new Response(\"404 Not Found\", { status: 404 });\n  }\n  set res(_res) {\n    this.#isFresh = false;\n    if (this.#res && _res) {\n      try {\n        for (const [k, v] of this.#res.headers.entries()) {\n          if (k === \"content-type\") {\n            continue;\n          }\n          if (k === \"set-cookie\") {\n            const cookies = this.#res.headers.getSetCookie();\n            _res.headers.delete(\"set-cookie\");\n            for (const cookie of cookies) {\n              _res.headers.append(\"set-cookie\", cookie);\n            }\n          } else {\n            _res.headers.set(k, v);\n          }\n        }\n      } catch (e) {\n        if (e instanceof TypeError && e.message.includes(\"immutable\")) {\n          this.res = new Response(_res.body, {\n            headers: _res.headers,\n            status: _res.status\n          });\n          return;\n        } else {\n          throw e;\n        }\n      }\n    }\n    this.#res = _res;\n    this.finalized = true;\n  }\n  render = (...args) => {\n    this.#renderer ??= (content) => this.html(content);\n    return this.#renderer(...args);\n  };\n  setLayout = (layout) => this.#layout = layout;\n  getLayout = () => this.#layout;\n  setRenderer = (renderer) => {\n    this.#renderer = renderer;\n  };\n  header = (name, value, options) => {\n    if (value === void 0) {\n      if (this.#headers) {\n        this.#headers.delete(name);\n      } else if (this.#preparedHeaders) {\n        delete this.#preparedHeaders[name.toLocaleLowerCase()];\n      }\n      if (this.finalized) {\n        this.res.headers.delete(name);\n      }\n      return;\n    }\n    if (options?.append) {\n      if (!this.#headers) {\n        this.#isFresh = false;\n        this.#headers = new Headers(this.#preparedHeaders);\n        this.#preparedHeaders = {};\n      }\n      this.#headers.append(name, value);\n    } else {\n      if (this.#headers) {\n        this.#headers.set(name, value);\n      } else {\n        this.#preparedHeaders ??= {};\n        this.#preparedHeaders[name.toLowerCase()] = value;\n      }\n    }\n    if (this.finalized) {\n      if (options?.append) {\n        this.res.headers.append(name, value);\n      } else {\n        this.res.headers.set(name, value);\n      }\n    }\n  };\n  status = (status) => {\n    this.#isFresh = false;\n    this.#status = status;\n  };\n  set = (key, value) => {\n    this.#var ??= /* @__PURE__ */ new Map();\n    this.#var.set(key, value);\n  };\n  get = (key) => {\n    return this.#var ? this.#var.get(key) : void 0;\n  };\n  get var() {\n    if (!this.#var) {\n      return {};\n    }\n    return Object.fromEntries(this.#var);\n  }\n  #newResponse(data, arg, headers) {\n    if (this.#isFresh && !headers && !arg && this.#status === 200) {\n      return new Response(data, {\n        headers: this.#preparedHeaders\n      });\n    }\n    if (arg && typeof arg !== \"number\") {\n      const header = new Headers(arg.headers);\n      if (this.#headers) {\n        this.#headers.forEach((v, k) => {\n          if (k === \"set-cookie\") {\n            header.append(k, v);\n          } else {\n            header.set(k, v);\n          }\n        });\n      }\n      const headers2 = setHeaders(header, this.#preparedHeaders);\n      return new Response(data, {\n        headers: headers2,\n        status: arg.status ?? this.#status\n      });\n    }\n    const status = typeof arg === \"number\" ? arg : this.#status;\n    this.#preparedHeaders ??= {};\n    this.#headers ??= new Headers();\n    setHeaders(this.#headers, this.#preparedHeaders);\n    if (this.#res) {\n      this.#res.headers.forEach((v, k) => {\n        if (k === \"set-cookie\") {\n          this.#headers?.append(k, v);\n        } else {\n          this.#headers?.set(k, v);\n        }\n      });\n      setHeaders(this.#headers, this.#preparedHeaders);\n    }\n    headers ??= {};\n    for (const [k, v] of Object.entries(headers)) {\n      if (typeof v === \"string\") {\n        this.#headers.set(k, v);\n      } else {\n        this.#headers.delete(k);\n        for (const v2 of v) {\n          this.#headers.append(k, v2);\n        }\n      }\n    }\n    return new Response(data, {\n      status,\n      headers: this.#headers\n    });\n  }\n  newResponse = (...args) => this.#newResponse(...args);\n  body = (data, arg, headers) => {\n    return typeof arg === \"number\" ? this.#newResponse(data, arg, headers) : this.#newResponse(data, arg);\n  };\n  text = (text, arg, headers) => {\n    if (!this.#preparedHeaders) {\n      if (this.#isFresh && !headers && !arg) {\n        return new Response(text);\n      }\n      this.#preparedHeaders = {};\n    }\n    this.#preparedHeaders[\"content-type\"] = TEXT_PLAIN;\n    if (typeof arg === \"number\") {\n      return this.#newResponse(text, arg, headers);\n    }\n    return this.#newResponse(text, arg);\n  };\n  json = (object, arg, headers) => {\n    const body = JSON.stringify(object);\n    this.#preparedHeaders ??= {};\n    this.#preparedHeaders[\"content-type\"] = \"application/json\";\n    return typeof arg === \"number\" ? this.#newResponse(body, arg, headers) : this.#newResponse(body, arg);\n  };\n  html = (html, arg, headers) => {\n    this.#preparedHeaders ??= {};\n    this.#preparedHeaders[\"content-type\"] = \"text/html; charset=UTF-8\";\n    if (typeof html === \"object\") {\n      return resolveCallback(html, HtmlEscapedCallbackPhase.Stringify, false, {}).then((html2) => {\n        return typeof arg === \"number\" ? this.#newResponse(html2, arg, headers) : this.#newResponse(html2, arg);\n      });\n    }\n    return typeof arg === \"number\" ? this.#newResponse(html, arg, headers) : this.#newResponse(html, arg);\n  };\n  redirect = (location, status) => {\n    this.#headers ??= new Headers();\n    this.#headers.set(\"Location\", String(location));\n    return this.newResponse(null, status ?? 302);\n  };\n  notFound = () => {\n    this.#notFoundHandler ??= () => new Response();\n    return this.#notFoundHandler(this);\n  };\n};\nexport {\n  Context,\n  TEXT_PLAIN\n};\n", "// src/router.ts\nvar METHOD_NAME_ALL = \"ALL\";\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\nvar UnsupportedPathError = class extends Error {\n};\nexport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHODS,\n  METHOD_NAME_ALL,\n  METHOD_NAME_ALL_LOWERCASE,\n  UnsupportedPathError\n};\n", "// src/utils/constants.ts\nvar COMPOSED_HANDLER = \"__COMPOSED_HANDLER\";\nexport {\n  COMPOSED_HANDLER\n};\n", "// src/hono-base.ts\nimport { compose } from \"./compose.js\";\nimport { Context } from \"./context.js\";\nimport { METHODS, METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE } from \"./router.js\";\nimport { COMPOSED_HANDLER } from \"./utils/constants.js\";\nimport { getPath, getPathNoStrict, mergePath } from \"./utils/url.js\";\nvar notFoundHandler = (c) => {\n  return c.text(\"404 Not Found\", 404);\n};\nvar errorHandler = (err, c) => {\n  if (\"getResponse\" in err) {\n    return err.getResponse();\n  }\n  console.error(err);\n  return c.text(\"Internal Server Error\", 500);\n};\nvar Hono = class {\n  get;\n  post;\n  put;\n  delete;\n  options;\n  patch;\n  all;\n  on;\n  use;\n  router;\n  getPath;\n  _basePath = \"/\";\n  #path = \"/\";\n  routes = [];\n  constructor(options = {}) {\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\n    allMethods.forEach((method) => {\n      this[method] = (args1, ...args) => {\n        if (typeof args1 === \"string\") {\n          this.#path = args1;\n        } else {\n          this.#addRoute(method, this.#path, args1);\n        }\n        args.forEach((handler) => {\n          this.#addRoute(method, this.#path, handler);\n        });\n        return this;\n      };\n    });\n    this.on = (method, path, ...handlers) => {\n      for (const p of [path].flat()) {\n        this.#path = p;\n        for (const m of [method].flat()) {\n          handlers.map((handler) => {\n            this.#addRoute(m.toUpperCase(), this.#path, handler);\n          });\n        }\n      }\n      return this;\n    };\n    this.use = (arg1, ...handlers) => {\n      if (typeof arg1 === \"string\") {\n        this.#path = arg1;\n      } else {\n        this.#path = \"*\";\n        handlers.unshift(arg1);\n      }\n      handlers.forEach((handler) => {\n        this.#addRoute(METHOD_NAME_ALL, this.#path, handler);\n      });\n      return this;\n    };\n    const { strict, ...optionsWithoutStrict } = options;\n    Object.assign(this, optionsWithoutStrict);\n    this.getPath = strict ?? true ? options.getPath ?? getPath : getPathNoStrict;\n  }\n  #clone() {\n    const clone = new Hono({\n      router: this.router,\n      getPath: this.getPath\n    });\n    clone.routes = this.routes;\n    return clone;\n  }\n  #notFoundHandler = notFoundHandler;\n  errorHandler = errorHandler;\n  route(path, app) {\n    const subApp = this.basePath(path);\n    app.routes.map((r) => {\n      let handler;\n      if (app.errorHandler === errorHandler) {\n        handler = r.handler;\n      } else {\n        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\n        handler[COMPOSED_HANDLER] = r.handler;\n      }\n      subApp.#addRoute(r.method, r.path, handler);\n    });\n    return this;\n  }\n  basePath(path) {\n    const subApp = this.#clone();\n    subApp._basePath = mergePath(this._basePath, path);\n    return subApp;\n  }\n  onError = (handler) => {\n    this.errorHandler = handler;\n    return this;\n  };\n  notFound = (handler) => {\n    this.#notFoundHandler = handler;\n    return this;\n  };\n  mount(path, applicationHandler, options) {\n    let replaceRequest;\n    let optionHandler;\n    if (options) {\n      if (typeof options === \"function\") {\n        optionHandler = options;\n      } else {\n        optionHandler = options.optionHandler;\n        replaceRequest = options.replaceRequest;\n      }\n    }\n    const getOptions = optionHandler ? (c) => {\n      const options2 = optionHandler(c);\n      return Array.isArray(options2) ? options2 : [options2];\n    } : (c) => {\n      let executionContext = void 0;\n      try {\n        executionContext = c.executionCtx;\n      } catch {\n      }\n      return [c.env, executionContext];\n    };\n    replaceRequest ||= (() => {\n      const mergedPath = mergePath(this._basePath, path);\n      const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\n      return (request) => {\n        const url = new URL(request.url);\n        url.pathname = url.pathname.slice(pathPrefixLength) || \"/\";\n        return new Request(url, request);\n      };\n    })();\n    const handler = async (c, next) => {\n      const res = await applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));\n      if (res) {\n        return res;\n      }\n      await next();\n    };\n    this.#addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\n    return this;\n  }\n  #addRoute(method, path, handler) {\n    method = method.toUpperCase();\n    path = mergePath(this._basePath, path);\n    const r = { path, method, handler };\n    this.router.add(method, path, [handler, r]);\n    this.routes.push(r);\n  }\n  #handleError(err, c) {\n    if (err instanceof Error) {\n      return this.errorHandler(err, c);\n    }\n    throw err;\n  }\n  #dispatch(request, executionCtx, env, method) {\n    if (method === \"HEAD\") {\n      return (async () => new Response(null, await this.#dispatch(request, executionCtx, env, \"GET\")))();\n    }\n    const path = this.getPath(request, { env });\n    const matchResult = this.router.match(method, path);\n    const c = new Context(request, {\n      path,\n      matchResult,\n      env,\n      executionCtx,\n      notFoundHandler: this.#notFoundHandler\n    });\n    if (matchResult[0].length === 1) {\n      let res;\n      try {\n        res = matchResult[0][0][0][0](c, async () => {\n          c.res = await this.#notFoundHandler(c);\n        });\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n      return res instanceof Promise ? res.then(\n        (resolved) => resolved || (c.finalized ? c.res : this.#notFoundHandler(c))\n      ).catch((err) => this.#handleError(err, c)) : res ?? this.#notFoundHandler(c);\n    }\n    const composed = compose(matchResult[0], this.errorHandler, this.#notFoundHandler);\n    return (async () => {\n      try {\n        const context = await composed(c);\n        if (!context.finalized) {\n          throw new Error(\n            \"Context is not finalized. Did you forget to return a Response object or `await next()`?\"\n          );\n        }\n        return context.res;\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n    })();\n  }\n  fetch = (request, ...rest) => {\n    return this.#dispatch(request, rest[1], rest[0], request.method);\n  };\n  request = (input, requestInit, Env, executionCtx) => {\n    if (input instanceof Request) {\n      return this.fetch(requestInit ? new Request(input, requestInit) : input, Env, executionCtx);\n    }\n    input = input.toString();\n    return this.fetch(\n      new Request(\n        /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`,\n        requestInit\n      ),\n      Env,\n      executionCtx\n    );\n  };\n  fire = () => {\n    addEventListener(\"fetch\", (event) => {\n      event.respondWith(this.#dispatch(event.request, event, void 0, event.request.method));\n    });\n  };\n};\nexport {\n  Hono as HonoBase\n};\n", "// src/router/reg-exp-router/node.ts\nvar LABEL_REG_EXP_STR = \"[^/]+\";\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\nvar PATH_ERROR = Symbol();\nvar regExpMetaChars = new Set(\".\\\\+*[^]$()\");\nfunction compareKey(a, b) {\n  if (a.length === 1) {\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\n  }\n  if (b.length === 1) {\n    return 1;\n  }\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\n    return 1;\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\n    return -1;\n  }\n  if (a === LABEL_REG_EXP_STR) {\n    return 1;\n  } else if (b === LABEL_REG_EXP_STR) {\n    return -1;\n  }\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\n}\nvar Node = class {\n  #index;\n  #varIndex;\n  #children = /* @__PURE__ */ Object.create(null);\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\n    if (tokens.length === 0) {\n      if (this.#index !== void 0) {\n        throw PATH_ERROR;\n      }\n      if (pathErrorCheckOnly) {\n        return;\n      }\n      this.#index = index;\n      return;\n    }\n    const [token, ...restTokens] = tokens;\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n    let node;\n    if (pattern) {\n      const name = pattern[1];\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\n      if (name && pattern[2]) {\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\n        if (/\\((?!\\?:)/.test(regexpStr)) {\n          throw PATH_ERROR;\n        }\n      }\n      node = this.#children[regexpStr];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[regexpStr] = new Node();\n        if (name !== \"\") {\n          node.#varIndex = context.varIndex++;\n        }\n      }\n      if (!pathErrorCheckOnly && name !== \"\") {\n        paramMap.push([name, node.#varIndex]);\n      }\n    } else {\n      node = this.#children[token];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[token] = new Node();\n      }\n    }\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\n  }\n  buildRegExpStr() {\n    const childKeys = Object.keys(this.#children).sort(compareKey);\n    const strList = childKeys.map((k) => {\n      const c = this.#children[k];\n      return (typeof c.#varIndex === \"number\" ? `(${k})@${c.#varIndex}` : regExpMetaChars.has(k) ? `\\\\${k}` : k) + c.buildRegExpStr();\n    });\n    if (typeof this.#index === \"number\") {\n      strList.unshift(`#${this.#index}`);\n    }\n    if (strList.length === 0) {\n      return \"\";\n    }\n    if (strList.length === 1) {\n      return strList[0];\n    }\n    return \"(?:\" + strList.join(\"|\") + \")\";\n  }\n};\nexport {\n  Node,\n  PATH_ERROR\n};\n", "// src/router/reg-exp-router/trie.ts\nimport { Node } from \"./node.js\";\nvar Trie = class {\n  #context = { varIndex: 0 };\n  #root = new Node();\n  insert(path, index, pathErrorCheckOnly) {\n    const paramAssoc = [];\n    const groups = [];\n    for (let i = 0; ; ) {\n      let replaced = false;\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\n        const mark = `@\\\\${i}`;\n        groups[i] = [mark, m];\n        i++;\n        replaced = true;\n        return mark;\n      });\n      if (!replaced) {\n        break;\n      }\n    }\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\n    for (let i = groups.length - 1; i >= 0; i--) {\n      const [mark] = groups[i];\n      for (let j = tokens.length - 1; j >= 0; j--) {\n        if (tokens[j].indexOf(mark) !== -1) {\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\n          break;\n        }\n      }\n    }\n    this.#root.insert(tokens, index, paramAssoc, this.#context, pathErrorCheckOnly);\n    return paramAssoc;\n  }\n  buildRegExp() {\n    let regexp = this.#root.buildRegExpStr();\n    if (regexp === \"\") {\n      return [/^$/, [], []];\n    }\n    let captureIndex = 0;\n    const indexReplacementMap = [];\n    const paramReplacementMap = [];\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\n      if (handlerIndex !== void 0) {\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\n        return \"$()\";\n      }\n      if (paramIndex !== void 0) {\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\n        return \"\";\n      }\n      return \"\";\n    });\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\n  }\n};\nexport {\n  Trie\n};\n", "// src/router/reg-exp-router/router.ts\nimport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHOD_NAME_ALL,\n  UnsupportedPathError\n} from \"../../router.js\";\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { PATH_ERROR } from \"./node.js\";\nimport { Trie } from \"./trie.js\";\nvar emptyParam = [];\nvar nullMatcher = [/^$/, [], /* @__PURE__ */ Object.create(null)];\nvar wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\nfunction buildWildcardRegExp(path) {\n  return wildcardRegExpCache[path] ??= new RegExp(\n    path === \"*\" ? \"\" : `^${path.replace(\n      /\\/\\*$|([.\\\\+*[^\\]$()])/g,\n      (_, metaChar) => metaChar ? `\\\\${metaChar}` : \"(?:|/.*)\"\n    )}$`\n  );\n}\nfunction clearWildcardRegExpCache() {\n  wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\n}\nfunction buildMatcherFromPreprocessedRoutes(routes) {\n  const trie = new Trie();\n  const handlerData = [];\n  if (routes.length === 0) {\n    return nullMatcher;\n  }\n  const routesWithStaticPathFlag = routes.map(\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\n  ).sort(\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\n  );\n  const staticMap = /* @__PURE__ */ Object.create(null);\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\n    if (pathErrorCheckOnly) {\n      staticMap[path] = [handlers.map(([h]) => [h, /* @__PURE__ */ Object.create(null)]), emptyParam];\n    } else {\n      j++;\n    }\n    let paramAssoc;\n    try {\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\n    } catch (e) {\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\n    }\n    if (pathErrorCheckOnly) {\n      continue;\n    }\n    handlerData[j] = handlers.map(([h, paramCount]) => {\n      const paramIndexMap = /* @__PURE__ */ Object.create(null);\n      paramCount -= 1;\n      for (; paramCount >= 0; paramCount--) {\n        const [key, value] = paramAssoc[paramCount];\n        paramIndexMap[key] = value;\n      }\n      return [h, paramIndexMap];\n    });\n  }\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\n  for (let i = 0, len = handlerData.length; i < len; i++) {\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\n      const map = handlerData[i][j]?.[1];\n      if (!map) {\n        continue;\n      }\n      const keys = Object.keys(map);\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\n      }\n    }\n  }\n  const handlerMap = [];\n  for (const i in indexReplacementMap) {\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\n  }\n  return [regexp, handlerMap, staticMap];\n}\nfunction findMiddleware(middleware, path) {\n  if (!middleware) {\n    return void 0;\n  }\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\n    if (buildWildcardRegExp(k).test(path)) {\n      return [...middleware[k]];\n    }\n  }\n  return void 0;\n}\nvar RegExpRouter = class {\n  name = \"RegExpRouter\";\n  #middleware;\n  #routes;\n  constructor() {\n    this.#middleware = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n    this.#routes = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n  }\n  add(method, path, handler) {\n    const middleware = this.#middleware;\n    const routes = this.#routes;\n    if (!middleware || !routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    if (!middleware[method]) {\n      ;\n      [middleware, routes].forEach((handlerMap) => {\n        handlerMap[method] = /* @__PURE__ */ Object.create(null);\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\n        });\n      });\n    }\n    if (path === \"/*\") {\n      path = \"*\";\n    }\n    const paramCount = (path.match(/\\/:/g) || []).length;\n    if (/\\*$/.test(path)) {\n      const re = buildWildcardRegExp(path);\n      if (method === METHOD_NAME_ALL) {\n        Object.keys(middleware).forEach((m) => {\n          middleware[m][path] ||= findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n        });\n      } else {\n        middleware[method][path] ||= findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n      }\n      Object.keys(middleware).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(middleware[m]).forEach((p) => {\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\n          });\n        }\n      });\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(routes[m]).forEach(\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\n          );\n        }\n      });\n      return;\n    }\n    const paths = checkOptionalParameter(path) || [path];\n    for (let i = 0, len = paths.length; i < len; i++) {\n      const path2 = paths[i];\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          routes[m][path2] ||= [\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\n          ];\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\n        }\n      });\n    }\n  }\n  match(method, path) {\n    clearWildcardRegExpCache();\n    const matchers = this.#buildAllMatchers();\n    this.match = (method2, path2) => {\n      const matcher = matchers[method2] || matchers[METHOD_NAME_ALL];\n      const staticMatch = matcher[2][path2];\n      if (staticMatch) {\n        return staticMatch;\n      }\n      const match = path2.match(matcher[0]);\n      if (!match) {\n        return [[], emptyParam];\n      }\n      const index = match.indexOf(\"\", 1);\n      return [matcher[1][index], match];\n    };\n    return this.match(method, path);\n  }\n  #buildAllMatchers() {\n    const matchers = /* @__PURE__ */ Object.create(null);\n    Object.keys(this.#routes).concat(Object.keys(this.#middleware)).forEach((method) => {\n      matchers[method] ||= this.#buildMatcher(method);\n    });\n    this.#middleware = this.#routes = void 0;\n    return matchers;\n  }\n  #buildMatcher(method) {\n    const routes = [];\n    let hasOwnRoute = method === METHOD_NAME_ALL;\n    [this.#middleware, this.#routes].forEach((r) => {\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\n      if (ownRoute.length !== 0) {\n        hasOwnRoute ||= true;\n        routes.push(...ownRoute);\n      } else if (method !== METHOD_NAME_ALL) {\n        routes.push(\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\n        );\n      }\n    });\n    if (!hasOwnRoute) {\n      return null;\n    } else {\n      return buildMatcherFromPreprocessedRoutes(routes);\n    }\n  }\n};\nexport {\n  RegExpRouter\n};\n", "// src/router/smart-router/router.ts\nimport { MESSAGE_MATCHER_IS_ALREADY_BUILT, UnsupportedPathError } from \"../../router.js\";\nvar SmartRouter = class {\n  name = \"SmartRouter\";\n  #routers = [];\n  #routes = [];\n  constructor(init) {\n    this.#routers = init.routers;\n  }\n  add(method, path, handler) {\n    if (!this.#routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    this.#routes.push([method, path, handler]);\n  }\n  match(method, path) {\n    if (!this.#routes) {\n      throw new Error(\"Fatal error\");\n    }\n    const routers = this.#routers;\n    const routes = this.#routes;\n    const len = routers.length;\n    let i = 0;\n    let res;\n    for (; i < len; i++) {\n      const router = routers[i];\n      try {\n        for (let i2 = 0, len2 = routes.length; i2 < len2; i2++) {\n          router.add(...routes[i2]);\n        }\n        res = router.match(method, path);\n      } catch (e) {\n        if (e instanceof UnsupportedPathError) {\n          continue;\n        }\n        throw e;\n      }\n      this.match = router.match.bind(router);\n      this.#routers = [router];\n      this.#routes = void 0;\n      break;\n    }\n    if (i === len) {\n      throw new Error(\"Fatal error\");\n    }\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\n    return res;\n  }\n  get activeRouter() {\n    if (this.#routes || this.#routers.length !== 1) {\n      throw new Error(\"No active router has been determined yet.\");\n    }\n    return this.#routers[0];\n  }\n};\nexport {\n  SmartRouter\n};\n", "// src/router/trie-router/node.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nimport { getPattern, splitPath, splitRoutingPath } from \"../../utils/url.js\";\nvar emptyParams = /* @__PURE__ */ Object.create(null);\nvar Node = class {\n  #methods;\n  #children;\n  #patterns;\n  #order = 0;\n  #params = emptyParams;\n  constructor(method, handler, children) {\n    this.#children = children || /* @__PURE__ */ Object.create(null);\n    this.#methods = [];\n    if (method && handler) {\n      const m = /* @__PURE__ */ Object.create(null);\n      m[method] = { handler, possibleKeys: [], score: 0 };\n      this.#methods = [m];\n    }\n    this.#patterns = [];\n  }\n  insert(method, path, handler) {\n    this.#order = ++this.#order;\n    let curNode = this;\n    const parts = splitRoutingPath(path);\n    const possibleKeys = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const p = parts[i];\n      const nextP = parts[i + 1];\n      const pattern = getPattern(p, nextP);\n      const key = Array.isArray(pattern) ? pattern[0] : p;\n      if (Object.keys(curNode.#children).includes(key)) {\n        curNode = curNode.#children[key];\n        const pattern2 = getPattern(p, nextP);\n        if (pattern2) {\n          possibleKeys.push(pattern2[1]);\n        }\n        continue;\n      }\n      curNode.#children[key] = new Node();\n      if (pattern) {\n        curNode.#patterns.push(pattern);\n        possibleKeys.push(pattern[1]);\n      }\n      curNode = curNode.#children[key];\n    }\n    const m = /* @__PURE__ */ Object.create(null);\n    const handlerSet = {\n      handler,\n      possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\n      score: this.#order\n    };\n    m[method] = handlerSet;\n    curNode.#methods.push(m);\n    return curNode;\n  }\n  #getHandlerSets(node, method, nodeParams, params) {\n    const handlerSets = [];\n    for (let i = 0, len = node.#methods.length; i < len; i++) {\n      const m = node.#methods[i];\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\n      const processedSet = {};\n      if (handlerSet !== void 0) {\n        handlerSet.params = /* @__PURE__ */ Object.create(null);\n        handlerSets.push(handlerSet);\n        if (nodeParams !== emptyParams || params && params !== emptyParams) {\n          for (let i2 = 0, len2 = handlerSet.possibleKeys.length; i2 < len2; i2++) {\n            const key = handlerSet.possibleKeys[i2];\n            const processed = processedSet[handlerSet.score];\n            handlerSet.params[key] = params?.[key] && !processed ? params[key] : nodeParams[key] ?? params?.[key];\n            processedSet[handlerSet.score] = true;\n          }\n        }\n      }\n    }\n    return handlerSets;\n  }\n  search(method, path) {\n    const handlerSets = [];\n    this.#params = emptyParams;\n    const curNode = this;\n    let curNodes = [curNode];\n    const parts = splitPath(path);\n    const curNodesQueue = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const part = parts[i];\n      const isLast = i === len - 1;\n      const tempNodes = [];\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\n        const node = curNodes[j];\n        const nextNode = node.#children[part];\n        if (nextNode) {\n          nextNode.#params = node.#params;\n          if (isLast) {\n            if (nextNode.#children[\"*\"]) {\n              handlerSets.push(\n                ...this.#getHandlerSets(nextNode.#children[\"*\"], method, node.#params)\n              );\n            }\n            handlerSets.push(...this.#getHandlerSets(nextNode, method, node.#params));\n          } else {\n            tempNodes.push(nextNode);\n          }\n        }\n        for (let k = 0, len3 = node.#patterns.length; k < len3; k++) {\n          const pattern = node.#patterns[k];\n          const params = node.#params === emptyParams ? {} : { ...node.#params };\n          if (pattern === \"*\") {\n            const astNode = node.#children[\"*\"];\n            if (astNode) {\n              handlerSets.push(...this.#getHandlerSets(astNode, method, node.#params));\n              astNode.#params = params;\n              tempNodes.push(astNode);\n            }\n            continue;\n          }\n          if (part === \"\") {\n            continue;\n          }\n          const [key, name, matcher] = pattern;\n          const child = node.#children[key];\n          const restPathString = parts.slice(i).join(\"/\");\n          if (matcher instanceof RegExp) {\n            const m = matcher.exec(restPathString);\n            if (m) {\n              params[name] = m[0];\n              handlerSets.push(...this.#getHandlerSets(child, method, node.#params, params));\n              if (Object.keys(child.#children).length) {\n                child.#params = params;\n                const componentCount = m[0].match(/\\//)?.length ?? 0;\n                const targetCurNodes = curNodesQueue[componentCount] ||= [];\n                targetCurNodes.push(child);\n              }\n              continue;\n            }\n          }\n          if (matcher === true || matcher.test(part)) {\n            params[name] = part;\n            if (isLast) {\n              handlerSets.push(...this.#getHandlerSets(child, method, params, node.#params));\n              if (child.#children[\"*\"]) {\n                handlerSets.push(\n                  ...this.#getHandlerSets(child.#children[\"*\"], method, params, node.#params)\n                );\n              }\n            } else {\n              child.#params = params;\n              tempNodes.push(child);\n            }\n          }\n        }\n      }\n      curNodes = tempNodes.concat(curNodesQueue.shift() ?? []);\n    }\n    if (handlerSets.length > 1) {\n      handlerSets.sort((a, b) => {\n        return a.score - b.score;\n      });\n    }\n    return [handlerSets.map(({ handler, params }) => [handler, params])];\n  }\n};\nexport {\n  Node\n};\n", "// src/router/trie-router/router.ts\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { Node } from \"./node.js\";\nvar TrieRouter = class {\n  name = \"TrieRouter\";\n  #node;\n  constructor() {\n    this.#node = new Node();\n  }\n  add(method, path, handler) {\n    const results = checkOptionalParameter(path);\n    if (results) {\n      for (let i = 0, len = results.length; i < len; i++) {\n        this.#node.insert(method, results[i], handler);\n      }\n      return;\n    }\n    this.#node.insert(method, path, handler);\n  }\n  match(method, path) {\n    return this.#node.search(method, path);\n  }\n};\nexport {\n  TrieRouter\n};\n", "// src/hono.ts\nimport { HonoBase } from \"./hono-base.js\";\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\nimport { SmartRouter } from \"./router/smart-router/index.js\";\nimport { TrieRouter } from \"./router/trie-router/index.js\";\nvar Hono = class extends HonoBase {\n  constructor(options = {}) {\n    super(options);\n    this.router = options.router ?? new SmartRouter({\n      routers: [new RegExpRouter(), new TrieRouter()]\n    });\n  }\n};\nexport {\n  Hono\n};\n", "import { serve } from \"@hono/node-server\";\nimport { Hono } from \"hono\";\n\nconst app = new Hono();\n\napp.get(\"/\", (c) => {\n  return c.text(\"Hello Standard Versioning!\");\n});\n\nserve(\n  {\n    fetch: app.fetch,\n    port: 3000,\n  },\n  (info) => {\n    console.log(`Server is running on http://localhost:${info.port}`);\n  }\n);\n"],
  "mappings": "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",
  "names": ["createServerHTTP", "Http2ServerRequest", "Readable", "crypto", "_a", "RequestError", "message", "options", "__publicField", "toRequestError", "GlobalRequest", "Request", "input", "getRequestCache", "newRequestFromIncoming", "method", "url", "incoming", "abortController", "headerRecord", "rawHeaders", "i", "key", "value", "init", "req", "controller", "Readable", "requestCache", "incomingKey", "urlKey", "abortControllerKey", "getAbortController", "requestPrototype", "k", "newRequest", "defaultHostname", "incomingUrl", "Http2ServerRequest", "url2", "e", "host", "scheme", "writeFromReadableStream", "stream", "writable", "reader", "cancel", "flow", "error", "onDrain", "done", "buildOutgoingHttpHeaders", "headers", "res", "cookies", "v", "responseCache", "getResponseCache", "cacheKey", "GlobalResponse", "_body", "_init", "Response2", "body", "__privateAdd", "__privateSet", "cachedGlobalResponse", "__privateGet", "stateKey", "getInternalBody", "response", "state", "X_ALREADY_SENT", "webFetch", "crypto", "info", "regBuffer", "regContentType", "handleRequestError", "handleFetchError", "handleResponseError", "outgoing", "err", "responseViaCache", "status", "header", "responseViaResponseObject", "errRes", "resHeaderRecord", "internalBody", "length", "source", "transferEncoding", "contentEncoding", "contentLength", "accelBuffering", "contentType", "buffer", "getRequestListener", "fetchCallback", "createAdaptorServer", "requestListener", "createServerHTTP", "serve", "listeningListener", "server", "serverInfo", "compose", "middleware", "onError", "onNotFound", "context", "next", "index", "dispatch", "i", "res", "isError", "handler", "err", "parseBody", "request", "options", "all", "dot", "contentType", "HonoRequest", "parseFormData", "formData", "convertFormDataToBodyData", "form", "value", "key", "handleParsingAllValues", "handleParsingNestedValues", "nestedForm", "keys", "key2", "index", "splitPath", "path", "paths", "splitRoutingPath", "routePath", "groups", "extractGroupsFromPath", "replaceGroupMarks", "match", "index", "mark", "i", "j", "patternCache", "getPattern", "label", "next", "cacheKey", "tryDecode", "str", "decoder", "tryDecodeURI", "getPath", "request", "url", "start", "charCode", "queryIndex", "getPathNoStrict", "request", "result", "getPath", "mergePath", "base", "sub", "rest", "checkOptionalParameter", "path", "segments", "results", "basePath", "segment", "optionalSegment", "v", "_decodeURI", "value", "decodeURIComponent_", "_getQueryParam", "url", "key", "multiple", "encoded", "keyIndex2", "trailingKeyCode", "valueIndex", "endIndex", "keyIndex", "nextKeyIndex", "name", "getQueryParam", "getQueryParams", "tryDecodeURIComponent", "str", "tryDecode", "decodeURIComponent_", "_validatedData", "_matchResult", "_HonoRequest_instances", "getDecodedParam_fn", "getAllDecodedParams_fn", "getParamValue_fn", "_cachedBody", "_a", "HonoRequest", "request", "path", "matchResult", "__privateAdd", "__publicField", "key", "bodyCache", "raw", "cachedBody", "anyCachedKey", "body", "__privateSet", "__privateMethod", "getQueryParam", "getQueryParams", "name", "headerData", "value", "options", "parseBody", "__privateGet", "target", "data", "route", "paramKey", "param", "decoded", "keys", "HtmlEscapedCallbackPhase", "raw", "value", "callbacks", "escapedString", "resolveCallback", "str", "phase", "preserveCallbacks", "context", "buffer", "callbacks", "resStr", "c", "res", "str2", "raw", "TEXT_PLAIN", "setHeaders", "headers", "map", "key", "_rawRequest", "_req", "_var", "_status", "_executionCtx", "_headers", "_preparedHeaders", "_res", "_isFresh", "_layout", "_renderer", "_notFoundHandler", "_matchResult", "_path", "_Context_instances", "newResponse_fn", "_a", "Context", "req", "options", "__privateAdd", "__publicField", "args", "__privateGet", "__privateSet", "content", "layout", "renderer", "name", "value", "status", "__privateMethod", "data", "arg", "text", "object", "body", "html", "resolveCallback", "HtmlEscapedCallbackPhase", "html2", "location", "HonoRequest", "k", "v", "cookies", "cookie", "e", "header", "headers2", "v2", "METHOD_NAME_ALL", "METHOD_NAME_ALL_LOWERCASE", "METHODS", "MESSAGE_MATCHER_IS_ALREADY_BUILT", "UnsupportedPathError", "COMPOSED_HANDLER", "notFoundHandler", "c", "errorHandler", "err", "_path", "_Hono_instances", "clone_fn", "_notFoundHandler", "addRoute_fn", "handleError_fn", "dispatch_fn", "_a", "Hono", "options", "__privateAdd", "__publicField", "handler", "__privateSet", "request", "rest", "__privateMethod", "input", "requestInit", "Env", "executionCtx", "mergePath", "event", "METHODS", "METHOD_NAME_ALL_LOWERCASE", "method", "args1", "args", "__privateGet", "path", "handlers", "p", "m", "arg1", "METHOD_NAME_ALL", "strict", "optionsWithoutStrict", "getPath", "getPathNoStrict", "app", "subApp", "r", "next", "compose", "COMPOSED_HANDLER", "applicationHandler", "replaceRequest", "optionHandler", "getOptions", "options2", "executionContext", "mergedPath", "pathPrefixLength", "url", "res", "clone", "env", "matchResult", "Context", "resolved", "composed", "context", "LABEL_REG_EXP_STR", "ONLY_WILDCARD_REG_EXP_STR", "TAIL_WILDCARD_REG_EXP_STR", "PATH_ERROR", "regExpMetaChars", "compareKey", "a", "b", "_index", "_varIndex", "_children", "_a", "Node", "__privateAdd", "tokens", "index", "paramMap", "context", "pathErrorCheckOnly", "__privateGet", "__privateSet", "token", "restTokens", "pattern", "node", "name", "regexpStr", "k", "strList", "c", "_context", "_root", "_a", "Trie", "__privateAdd", "Node", "path", "index", "pathErrorCheckOnly", "paramAssoc", "groups", "i", "replaced", "m", "mark", "tokens", "j", "__privateGet", "regexp", "captureIndex", "indexReplacementMap", "paramReplacementMap", "_", "handlerIndex", "paramIndex", "emptyParam", "nullMatcher", "wildcardRegExpCache", "buildWildcardRegExp", "path", "_", "metaChar", "clearWildcardRegExpCache", "buildMatcherFromPreprocessedRoutes", "routes", "trie", "Trie", "handlerData", "routesWithStaticPathFlag", "route", "isStaticA", "pathA", "isStaticB", "pathB", "staticMap", "i", "j", "len", "pathErrorCheckOnly", "handlers", "h", "paramAssoc", "e", "PATH_ERROR", "UnsupportedPathError", "paramCount", "paramIndexMap", "key", "value", "regexp", "indexReplacementMap", "paramReplacementMap", "len2", "map", "keys", "k", "len3", "handlerMap", "findMiddleware", "middleware", "a", "b", "_middleware", "_routes", "_RegExpRouter_instances", "buildAllMatchers_fn", "buildMatcher_fn", "_a", "RegExpRouter", "__privateAdd", "__publicField", "__privateSet", "METHOD_NAME_ALL", "method", "handler", "__privateGet", "MESSAGE_MATCHER_IS_ALREADY_BUILT", "p", "re", "m", "paths", "checkOptionalParameter", "path2", "matchers", "__privateMethod", "method2", "matcher", "staticMatch", "match", "index", "hasOwnRoute", "r", "ownRoute", "_routers", "_routes", "_a", "SmartRouter", "init", "__publicField", "__privateAdd", "__privateSet", "method", "path", "handler", "__privateGet", "MESSAGE_MATCHER_IS_ALREADY_BUILT", "routers", "routes", "len", "res", "router", "i2", "len2", "e", "UnsupportedPathError", "emptyParams", "_methods", "_children", "_patterns", "_order", "_params", "_Node_instances", "getHandlerSets_fn", "_a", "Node", "method", "handler", "children", "__privateAdd", "__privateSet", "m", "path", "__privateWrapper", "curNode", "parts", "splitRoutingPath", "possibleKeys", "i", "len", "p", "nextP", "pattern", "getPattern", "key", "__privateGet", "pattern2", "handlerSet", "v", "a", "handlerSets", "curNodes", "splitPath", "curNodesQueue", "part", "isLast", "tempNodes", "j", "len2", "node", "nextNode", "__privateMethod", "k", "len3", "params", "astNode", "name", "matcher", "child", "restPathString", "componentCount", "b", "nodeParams", "METHOD_NAME_ALL", "processedSet", "i2", "processed", "_node", "_a", "TrieRouter", "__publicField", "__privateAdd", "__privateSet", "Node", "method", "path", "handler", "results", "checkOptionalParameter", "i", "len", "__privateGet", "Hono", "options", "SmartRouter", "RegExpRouter", "TrieRouter", "app", "Hono", "c", "serve", "info"]
}
